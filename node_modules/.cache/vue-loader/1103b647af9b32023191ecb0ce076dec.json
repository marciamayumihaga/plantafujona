{"remainingRequest":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/src/App.vue","mtime":1595546289000},{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andreruz/Desktop/Marcia/Escapista/EscapeVirtual/cadastrosala/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlbGVjaW9uYWRvIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Cadastro de sala</h1>\n    <form class=\"container-fluid\">\n      <div class=\"form-group\">\n        <label for=\"sala.nome\" class=\"mr-2\">Nome da sala</label>         \n        <input type=\"text\" id=\"sala.nome\" name=\"sala.nome\" v-model=\"nomeSala\" class=\"form-control\" />\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2\">\n          <ul>\n            <li v-for=\"(cenario, i) in listaCenario\" :key=\"i\" :id=\"cenario.id\" :class=\"{ selecionado: cenario.selecionado }\">\n              <a href=\"#\" @click=\"alterarCenarioSelecionado(cenario.id)\">{{ cenario.id }}</a>\n            </li>\n          </ul> \n        </div>\n        <div class=\"col-10\">\n          <div v-for=\"(cenario, i) in listaCenario\" :key=\"i + '.cadastro'\">\n            <div v-show=\"cenario.selecionado\">\n              <CadastroCenario ref=\"cadastroCenario\"\n                  :id=\"cenario.id\"\n                  :listaItemCenarios=\"listaItemCenarios\"\n                  :listaObjetoCenarios=\"listaObjetoCenarios\"\n                  :dadosIniciais=\"cenario.dadosIniciais\"\n                  :tipoItem=\"tipoItem\"\n                  @origemCenarioAlterada=\"alterarDestinoItemCenarios\"\n                  @nomeCenarioAlterado=\"alterarNomeCenarioItemCenarios\"\n                  @itemAdicionado=\"adicionarItemCenarios\" \n                  @nomeItemAlterado=\"alterarNomeItemItemCenarios\"\n                  @itemRemovido=\"removerItemCenarios\"\n                  @objetoRecipienteAlterado=\"alterarRecipienteObjetoCenarios\"\n                  @imagemObjetoAlterada=\"alterarImagemObjetoObjetoCenarios\"></CadastroCenario>\n              <div class=\"form-group\">    \n                <input type=\"button\" value=\"Remover cenário\" v-if=\"!existeCenarioDestinoItemCenarios(cenario.id)\" @click=\"removerCenario(cenario.id)\" class=\"btn btn-secondary\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>  \n      <div class=\"form-group\">\n        <input type=\"button\" value=\"Adicionar novo cenário\" @click=\"adicionarCenario()\" class=\"btn btn-primary w-100\" />\n      </div>\n      <div class=\"form-group\">\n        <input type=\"button\" value=\"Salvar sala\" @click=\"salvarSala()\" class=\"btn btn-primary w-50\" />\n        <input type=\"button\" value=\"Cancelar\" @click=\"cancelarSala()\" class=\"btn btn-secondary w-50\" />\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport CadastroCenario from \"./components/CadastroCenario\"\nimport JsonTeste from './assets/teste.json'\n\nexport default {\n  name: \"CadastroSala\", \n  components: {\n    CadastroCenario\n  }, \n  mounted() {\n    let novaSala = false;\n    if (novaSala) {\n      this.adicionarCenario();\n    }\n    else{\n      let sala = JsonTeste;\n      this.id = sala.id;\n      this.nomeSala = sala.nome;\n      for (let i=0; i<sala.cenarios.length; i++) {\n        let cenario = sala.cenarios[i];\n        for (let j=0; j<cenario.listaCadeado.length; j++) {\n          let cadeado = cenario.listaCadeado[j];\n          this.listaItemCenarios.push({ id: cadeado.id, tipo: this.tipoItem.CADEADO, cenarioId: cenario.id, nomeCenario: cenario.nome ? cenario.nome : cenario.id, nomeItem: cadeado.nome ? cadeado.nome : cadeado.id, cenarioIdDestino: this.retornarCenarioDestinoItem(sala.cenarios, cadeado.id) });\n        }\n        for (let j=0; j<cenario.listaObjeto.length; j++) {\n          let objeto = cenario.listaObjeto[j];\n          this.listaObjetoCenarios.push({ id: objeto.id, tipo: this.tipoItem.OBJETO, cenarioId: cenario.id, nomeCenario: cenario.nome ? cenario.nome : cenario.id, nomeItem: objeto.nome ? objeto.nome : objeto.id, listaObjetoRecipienteIdDestino: this.retornarRecipientesDestinoObjeto(sala.cenarios, objeto.id), imagem: objeto.imagem });\n        }\n        for (let j=0; j<cenario.listaGrupoRecipiente.length; j++) {\n          let grupoRecipiente = cenario.listaGrupoRecipiente[j];\n          this.listaItemCenarios.push({ id: grupoRecipiente.id, tipo: this.tipoItem.GRUPO_RECIPIENTE, cenarioId: cenario.id, nomeCenario: cenario.nome ? cenario.nome : cenario.id, nomeItem: grupoRecipiente.nome ? grupoRecipiente.nome : grupoRecipiente.id, cenarioIdDestino: this.retornarCenarioDestinoItem(sala.cenarios, grupoRecipiente.id) });\n        }\n        for (let j=0; j<cenario.listaCenarioFilho.length; j++) {\n          let cenarioFilho = cenario.listaCenarioFilho[j];\n          this.listaItemCenarios.push({ id: cenarioFilho.id, tipo: this.tipoItem.CENARIO_FILHO, cenarioId: cenario.id, nomeCenario: cenario.nome ? cenario.nome : cenario.id, nomeItem: cenarioFilho.nome ? cenarioFilho.nome : cenarioFilho.id, cenarioIdDestino: this.retornarCenarioDestinoItem(sala.cenarios, cenarioFilho.id) });\n        }\n        this.listaCenario.push({\n          id: cenario.id,\n          dadosIniciais: cenario,\n          selecionado: i == 0\n        });\n        if (i == sala.cenarios.length - 1) {\n          this.idUnicoCenario = parseInt(cenario.id.replace(/cenario/g, ''));\n        }\n      }\n    }\n  },\n  data: function() {\n    return {\n      id: -1,\n      nomeSala: \"\",\n      idUnicoCenario: 0,\n      listaItemCenarios: [],\n      listaObjetoCenarios: [],\n      listaCenario: [],\n      tipoItem: {\n        CADEADO: \"Cadeado\", \n        OBJETO: \"Objeto\", \n        OBJETO_RECIPIENTE: \"Recipiente de objeto\", \n        GRUPO_RECIPIENTE: \"Grupo de recipiente\",\n        CENARIO_FILHO: \"Cenário filho\"\n      }\n    }\n  },\n  methods: {\n    adicionarCenario() {\n      this.alterarCenarioSelecionado(\"\");\n      // Adiciona um cenário\n      this.listaCenario.push({\n        id: \"cenario\" + (++this.idUnicoCenario),\n        dadosIniciais: {\n          inicial: this.idUnicoCenario == 1\n        },\n        selecionado: true\n      })\n    },\n    alterarCenarioSelecionado(cenarioId) {\n      // Altera o cenário selecionado para ficar visível na tela\n      for (let i=0; i<this.listaCenario.length; i++) {\n        if (this.listaCenario[i].id === cenarioId) {\n          this.listaCenario[i].selecionado = true;\n        }\n        else {\n          this.listaCenario[i].selecionado = false;\n        }\n      }\n    },\n    removerCenario(cenarioId) {\n      if (confirm(\"Confirma a exclusão do cenário?\")) {\n        // Remove como opção de Origem de cenário os itens do cenário removido\n        for (let i=this.listaItemCenarios.length-1; i>=0; i--) {\n          if (this.listaItemCenarios[i].cenarioId === cenarioId) {\n            this.listaItemCenarios.splice(i, 1);\n          }\n        }\n        // Remove como opção de Objeto para recipiente os itens do cenário removido\n        for (let i=this.listaObjetoCenarios.length-1; i>=0; i--) {\n          if (this.listaObjetoCenarios[i].cenarioId === cenarioId) {\n            this.listaObjetoCenarios.splice(i, 1);\n          }\n        }\n        // Remove o cenário\n        for (let i=0; i<this.listaCenario.length; i++) {\n          if (this.listaCenario[i].id === cenarioId) {\n            this.listaCenario.splice(i, 1);\n            break;\n          }\n        }\n      }    \n    },\n    alterarNomeCenarioItemCenarios(cenario) {\n      // Altera o nome do cenário na opção de Origem de cenário\n      for (let i=0; i<this.listaItemCenarios.length; i++) {\n        if (this.listaItemCenarios[i].cenarioId === cenario.cenarioId) {\n          this.listaItemCenarios[i].nomeCenario = cenario.nomeCenario;\n        }\n      }\n      // Altera o nome do cenário na opção de Objeto para recipiente\n      for (let i=0; i<this.listaObjetoCenarios.length; i++) {\n        if (this.listaObjetoCenarios[i].cenarioId === cenario.cenarioId) {\n          this.listaObjetoCenarios[i].nomeCenario = cenario.nomeCenario;\n        }\n      }\n    },\n    adicionarItemCenarios(item) {      \n      if (item.tipo === this.tipoItem.OBJETO) {\n        // Adiciona item como opção de Objeto para recipiente\n        this.listaObjetoCenarios.push(item);\n      }\n      else {\n        // Adiciona item como opção de Origem de cenário\n        this.listaItemCenarios.push(item);\n      }\n    },  \n    alterarNomeItemItemCenarios(item) {     \n      if (item.tipo === this.tipoItem.OBJETO) {\n        // Altera o nome do item na opção de Objeto para recipiente\n        for (let i=0; i<this.listaObjetoCenarios.length; i++) {\n          if (this.listaObjetoCenarios[i].id === item.itemId) {\n            this.listaObjetoCenarios[i].nomeItem = item.nomeItem === \"\"? item.itemId : item.nomeItem;\n            break;\n          }\n        }\n      }\n      else {\n        // Altera o nome do item na opção de Origem de cenário\n        for (let i=0; i<this.listaItemCenarios.length; i++) {\n          if (this.listaItemCenarios[i].id === item.itemId) {\n            this.listaItemCenarios[i].nomeItem = item.nomeItem === \"\"? item.itemId : item.nomeItem;\n            break;\n          }\n        }\n      }\n    },\n    alterarImagemObjetoObjetoCenarios(objeto) {     \n      // Altera a imagem do objeto na opção de Objeto para recipiente\n      for (let i=0; i<this.listaObjetoCenarios.length; i++) {\n        if (this.listaObjetoCenarios[i].id === objeto.itemId) {\n          this.listaObjetoCenarios[i].imagem = objeto.imagem;\n          break;\n        }\n      }\n    },    \n    removerItemCenarios(item) {     \n      if (item.tipo === this.tipoItem.OBJETO) {\n        // Remove como opção de Objeto para recipiente o item removido\n        for (let i=0; i<this.listaObjetoCenarios.length; i++) {\n          if (this.listaObjetoCenarios[i].id === item.id) {\n            this.listaObjetoCenarios.splice(i, 1);\n            break;\n          }\n        }\n      }\n      else {\n        // Remove como opção de Origem de cenário o item removido\n        for (let i=0; i<this.listaItemCenarios.length; i++) {\n          if (this.listaItemCenarios[i].id === item.id) {\n            this.listaItemCenarios.splice(i, 1);\n            break;\n          }\n        }\n      }\n    },   \n    alterarDestinoItemCenarios(cenario) {\n      // Altera o destino do item que foi selecionado ou desselecionado como opção de Origem do cenário\n      for (let i=0; i<this.listaItemCenarios.length; i++) {\n        if (this.listaItemCenarios[i].id === cenario.itemId) {\n          if (cenario.itemSelecionado) {\n            this.listaItemCenarios[i].cenarioIdDestino = cenario.cenarioId;\n          }\n          else {\n            this.listaItemCenarios[i].cenarioIdDestino = \"\";\n          }\n          break;\n        }\n      }\n    },\n    existeCenarioDestinoItemCenarios(cenarioId) {\n      // Verifica se existe item desse cenário sendo utilizado como opção de Origem de cenário para outro cenário destino\n      for (let i=0; i<this.listaItemCenarios.length; i++) {\n        if (this.listaItemCenarios[i].cenarioId === cenarioId && this.listaItemCenarios[i].cenarioIdDestino !== \"\") {\n          return true;\n        }\n      }\n      return false;\n    },\n    alterarRecipienteObjetoCenarios(recipiente) {\n      // Altera o destino do objeto que foi selecionado ou desselecionado como opção de objeto para um recipiente\n      for (let i=0; i<this.listaObjetoCenarios.length; i++) {\n        if (this.listaObjetoCenarios[i].id === recipiente.objetoId) {\n          if (recipiente.objetoSelecionado) {\n            this.listaObjetoCenarios[i].listaObjetoRecipienteIdDestino.push(recipiente.objetoRecipienteId);\n          }\n          else {\n            for (let j=0; j<this.listaObjetoCenarios[i].listaObjetoRecipienteIdDestino.length; j++) {\n              if (this.listaObjetoCenarios[i].listaObjetoRecipienteIdDestino[j] === recipiente.objetoRecipienteId) {\n                this.listaObjetoCenarios[i].listaObjetoRecipienteIdDestino.splice(j, 1);\n                break;\n              }\n            }\n          }\n          break;\n        }\n      }\n    },\n    salvarSala() {\n      let cenarios = [];\n      for (let i=0; i< this.listaCenario.length; i++) {    \n        cenarios.push(this.$refs.cadastroCenario[i].retornarSalvar());\n      }\n      let sala = {\n        id: this.id,\n        nome: this.nomeSala,\n        cenarios: cenarios\n      }\n      console.log(\"Salvar sala \", JSON.stringify(sala));\n    },\n    cancelarSala() {\n      console.log(\"Cancelar sala\");\n    },\n    retornarCenarioDestinoItem(cenarios, itemId) {\n      for (let i=0; i<cenarios.length; i++) {\n        let cenario = cenarios[i];\n        for (let j=0; j<cenario.listaItemOrigem.length; j++) {\n          if (cenario.listaItemOrigem[j] === itemId) {\n            return cenario.id;\n          }\n        }\n      }\n      return \"\";\n    },\n    retornarRecipientesDestinoObjeto(cenarios, objetoId) {\n      let retorno = []\n      for (let i=0; i<cenarios.length; i++) {\n        let cenario = cenarios[i];\n        for (let j=0; j<cenario.listaObjetoRecipiente.length; j++) {\n          let objetoRecipiente = cenario.listaObjetoRecipiente[j];\n          for (let k=0; k<objetoRecipiente.objetos.length; k++) {\n            if (objetoRecipiente.objetos[k] === objetoId) {\n              retorno.push(objetoRecipiente.id);\n            }\n          }         \n        }\n      }\n      return retorno;\n    }\n  } \n}\n</script>\n\n<style scoped>\n  .selecionado {\n    background-color: yellow;\n  }\n</style>"]}]}